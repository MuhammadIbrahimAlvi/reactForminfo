{"version":3,"sources":["assets/Icon.png","Components/Inputs/CustomInput.js","Containers/FormLayout.style.js","Components/Radios/CustomRadios.js","Components/Radios/CustomRadio.style.js","Components/Buttons/CustomButton.js","Components/Buttons/Buttton.style.js","Containers/FormLayout.js","App.js","reportWebVitals.js","index.js"],"names":["withStyles","inputWidth","marginTop","width","props","makeStyles","theme","root","margin","spacing","TextField","type","className","classes","id","label","textlabel","onChange","error","value","helperText","name","onBlur","inlineDisplay","display","marginHeight","FormControl","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","btnColor","backgroundColor","Button","variant","fullWidth","validationSchema","yup","firstName","trim","max","matches","required","lastName","email","password","min","gender","useStyles","minWidth","maxWidth","paddingTop","boxShadow","bullet","transform","title","fontSize","pos","marginBottom","FormLayout","formik","useFormik","initialValues","onSubmit","values","resetForm","alert","JSON","stringify","Card","CardContent","Typography","color","gutterBottom","src","Icon","alt","handleSubmit","handleChange","handleBlur","touched","Boolean","errors","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30d223c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Icon.47fc3ec6.png\";","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core';\r\nimport {styles} from \"./../../Containers/FormLayout.style\";\r\n\r\nconst CustomInput=(props)=>{\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n          },\r\n        },\r\n      }));\r\n    return(\r\n        <div>\r\n <TextField type={props.type} className={props.classes.inputWidth} id=\"standard-basic\" label={props.textlabel} onChange={props.onChange} error={props.error} value={props.value} helperText={props.helperText} name={props.name} onBlur={props.onBlur}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(CustomInput);","export const styles = {\r\n  inputWidth: {\r\n    marginTop: \"5px\",\r\n    width: \"400px\",\r\n  },\r\n};\r\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { withStyles } from '@material-ui/core';\r\nimport {customRadioStyle} from '../Radios/CustomRadio.style';\r\nconst CustomRadio = (props) => {\r\n    return (\r\n        <FormControl component=\"fieldset\" className={props.classes.marginHeight}>\r\n            <FormLabel component=\"legend\">Gender</FormLabel>\r\n            <RadioGroup onBlur={props.onBlur} error={props.error} onChange={props.onChange}  name={props.name} className={props.classes.inlineDisplay} helperText={props.helperText}>\r\n                <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n\r\n    )\r\n}\r\nexport default withStyles(customRadioStyle)(CustomRadio);","export const customRadioStyle={\r\n    inlineDisplay:{\r\n        display:\"inline\"\r\n    },\r\n    marginHeight:{\r\n        marginTop:\"15px\"\r\n    }\r\n}","import React from \"react\";\r\nimport { btnstyles } from \"./Buttton.style\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nconst CustomButton = (props) => {\r\n  return (\r\n    <div>\r\n      <Button\r\n        className={props.classes.btnColor}\r\n        variant=\"contained\"\r\n        fullWidth\r\n        type=\"submit\"\r\n      >\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(btnstyles)(CustomButton);\r\n","export const btnstyles = {\r\n  btnColor: {\r\n    backgroundColor: \"#E0E5EC\",\r\n  },\r\n  \"&:hover\": {\r\n    backgroundColor: \"#E0E5EC\",\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport \"./FormLayout.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Icon from \"../assets/Icon.png\";\r\nimport CustomInput from \"../Components/Inputs/CustomInput\";\r\nimport { useFormik } from \"formik\";\r\nimport CustomRadio from \"./../Components/Radios/CustomRadios\";\r\nimport CustomButton from \"./../Components/Buttons/CustomButton\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object({\r\n  firstName: yup\r\n    .string()\r\n    .trim()\r\n    .max(25, \"Must be 15 characters or less\")\r\n    .matches(\r\n      /[a-zA-Z][a-zA-Z ]+[a-zA-Z]$/,\r\n      \"Name cannot contain numbers or special Characters\"\r\n    )\r\n    .required(\"Required\"),\r\n  lastName: yup\r\n    .string()\r\n    .max(20, \"Must be 20 characters or less\")\r\n    .trim()\r\n    .matches(\r\n      /[a-zA-Z][a-zA-Z ]+[a-zA-Z]$/,\r\n      \"Name cannot contain numbers or special Characters\"\r\n    )\r\n    .required(\"Required\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n  gender: yup.string().required(\"Select Gender\"),\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    backgroundColor: \"#E0E5EC\",\r\n    maxWidth: 580,\r\n    margin: \"0 auto\",\r\n    paddingTop: \"20px\",\r\n    boxShadow:\r\n      \"9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px  rgba(255,255,255, 0.5)\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\nconst FormLayout = (props) => {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      gender: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            <img src={Icon} alt=\"Icon Image\" />\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h4\"\r\n            className={classes.pos}\r\n            color=\"textSecondary\"\r\n          >\r\n            PERSONAL DETAIL FORM\r\n          </Typography>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <CustomInput\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              type=\"text\"\r\n              textlabel=\"First Name\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.firstName}\r\n              onBlur={formik.handleBlur}\r\n              error={\r\n                formik.touched.firstName && Boolean(formik.errors.firstName)\r\n              }\r\n              helperText={formik.touched.firstName && formik.errors.firstName}\r\n            />\r\n\r\n            <CustomInput\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              type=\"text\"\r\n              textlabel=\"Last Name\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.lastName}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.lastName && Boolean(formik.errors.lastName)}\r\n              helperText={formik.touched.lastName && formik.errors.lastName}\r\n            />\r\n\r\n            <CustomInput\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              textlabel=\"Email\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.email}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n\r\n            <CustomInput\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              textlabel=\"Password\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.password}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n            <CustomRadio\r\n              onChange={formik.handleChange}\r\n              name=\"gender\"\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.gender && Boolean(formik.errors.gender)}\r\n              helperText={formik.touched.gender && formik.errors.gender}\r\n            />\r\n            <CustomButton onSubmit={formik.onSubmit} />\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormLayout;\r\n","\nimport './App.css';\nimport ContainedButtons from './Containers/FormLayout'\nfunction App() {\n  return (\n    <div className=\"App\">\n     <ContainedButtons/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}